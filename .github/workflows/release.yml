name: Release

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25'
    
    - name: Install dependencies
      run: go mod download
    
    - name: Build binary
      run: |
        # Build for Apple Silicon only
        mkdir -p dist
        
        # macOS ARM64 (Apple Silicon) - optimized for size
        CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build \
          -ldflags "-s -w -X main.version=$(git rev-parse --short HEAD)" \
          -tags netgo -a -installsuffix cgo \
          -o dist/work \
          ./cmd/work

    - name: Create checksums
      run: |
        cd dist
        shasum -a 256 * > checksums.txt
    
    - name: Generate version
      id: version
      run: |
        # Use commit hash as version for now
        VERSION=$(git rev-parse --short HEAD)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "VERSION=$VERSION" >> $GITHUB_ENV
    
    - name: Delete existing release
      run: |
        # Delete the 'latest' release if it exists
        gh release delete latest --yes || true
        git push --delete origin latest || true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: latest
        name: Latest Build (${{ env.VERSION }})
        body: |
          Automated build from latest main branch.
          
          **Platform Support:** Apple Silicon (macOS ARM64) only
          
          **Installation:**
          ```bash
          # macOS (Apple Silicon)
          curl -L https://github.com/${{ github.repository }}/releases/download/latest/work -o work && chmod +x work && sudo mv work /usr/local/bin/
          
          # Or use the install script
          curl -sSL https://raw.githubusercontent.com/${{ github.repository }}/main/install.sh | bash
          ```
          
          Commit: ${{ github.sha }}
        files: |
          dist/work
          dist/checksums.txt
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}